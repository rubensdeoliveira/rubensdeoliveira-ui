import { cva } from 'class-variance-authority'
import { ReactNode } from 'react'
import { renderResponsizeProp } from '../helpers/render-responsive-prop'

type BorderRadius = number | 'full'

export type CardProps = {
  borderRadius: BorderRadius | BorderRadius[]
  paddingHorizontal: number | number[]
  paddingVertical: number | number[]
  className?: string
  children: ReactNode
}

const cardStyles = cva('', {
  variants: {
    borderRadius: {
      0: 'rounded-[0px]',
      2: 'rounded-[2px]',
      4: 'rounded-[4px]',
      6: 'rounded-[6px]',
      8: 'rounded-[8px]',
      10: 'rounded-[10px]',
      12: 'rounded-[12px]',
      14: 'rounded-[14px]',
      16: 'rounded-[16px]',
      full: 'rounded-[9999px]',
    },
    borderRadiusMd: {
      0: 'md:rounded-[0px]',
      2: 'md:rounded-[2px]',
      4: 'md:rounded-[4px]',
      6: 'md:rounded-[6px]',
      8: 'md:rounded-[8px]',
      10: 'md:rounded-[10px]',
      12: 'md:rounded-[12px]',
      14: 'md:rounded-[14px]',
      16: 'md:rounded-[16px]',
      full: 'md:rounded-[9999px]',
    },
    borderRadiusLg: {
      0: 'lg:rounded-[0px]',
      2: 'lg:rounded-[2px]',
      4: 'lg:rounded-[4px]',
      6: 'lg:rounded-[6px]',
      8: 'lg:rounded-[8px]',
      10: 'lg:rounded-[10px]',
      12: 'lg:rounded-[12px]',
      14: 'lg:rounded-[14px]',
      16: 'lg:rounded-[16px]',
      full: 'lg:rounded-[9999px]',
    },
    paddingHorizontal: {
      0: 'px-[0rem]',
      4: 'px-[0.25rem]',
      8: 'px-[0.5rem]',
      12: 'px-[0.75rem]',
      16: 'px-[1rem]',
      20: 'px-[1.25rem]',
      24: 'px-[1.5rem]',
      28: 'px-[1.75rem]',
      32: 'px-[2rem]',
      36: 'px-[2.25rem]',
      40: 'px-[2.5rem]',
      44: 'px-[2.75rem]',
      48: 'px-[3rem]',
      52: 'px-[3.25rem]',
      56: 'px-[3.5rem]',
      60: 'px-[3.75rem]',
      64: 'px-[4rem]',
    },
    paddingHorizontalMd: {
      0: 'px-[0rem]',
      4: 'px-[0.25rem]',
      8: 'px-[0.5rem]',
      12: 'px-[0.75rem]',
      16: 'px-[1rem]',
      20: 'px-[1.25rem]',
      24: 'px-[1.5rem]',
      28: 'px-[1.75rem]',
      32: 'px-[2rem]',
      36: 'px-[2.25rem]',
      40: 'px-[2.5rem]',
      44: 'px-[2.75rem]',
      48: 'px-[3rem]',
      52: 'px-[3.25rem]',
      56: 'px-[3.5rem]',
      60: 'px-[3.75rem]',
      64: 'px-[4rem]',
    },
    paddingHorizontalLg: {
      0: 'px-[0rem]',
      4: 'px-[0.25rem]',
      8: 'px-[0.5rem]',
      12: 'px-[0.75rem]',
      16: 'px-[1rem]',
      20: 'px-[1.25rem]',
      24: 'px-[1.5rem]',
      28: 'px-[1.75rem]',
      32: 'px-[2rem]',
      36: 'px-[2.25rem]',
      40: 'px-[2.5rem]',
      44: 'px-[2.75rem]',
      48: 'px-[3rem]',
      52: 'px-[3.25rem]',
      56: 'px-[3.5rem]',
      60: 'px-[3.75rem]',
      64: 'px-[4rem]',
    },
    paddingVertical: {
      0: 'py-[0rem]',
      4: 'py-[0.25rem]',
      8: 'py-[0.5rem]',
      12: 'py-[0.75rem]',
      16: 'py-[1rem]',
      20: 'py-[1.25rem]',
      24: 'py-[1.5rem]',
      28: 'py-[1.75rem]',
      32: 'py-[2rem]',
      36: 'py-[2.25rem]',
      40: 'py-[2.5rem]',
      44: 'py-[2.75rem]',
      48: 'py-[3rem]',
      52: 'py-[3.25rem]',
      56: 'py-[3.5rem]',
      60: 'py-[3.75rem]',
      64: 'py-[4rem]',
    },
    paddingVerticalMd: {
      0: 'py-[0rem]',
      4: 'py-[0.25rem]',
      8: 'py-[0.5rem]',
      12: 'py-[0.75rem]',
      16: 'py-[1rem]',
      20: 'py-[1.25rem]',
      24: 'py-[1.5rem]',
      28: 'py-[1.75rem]',
      32: 'py-[2rem]',
      36: 'py-[2.25rem]',
      40: 'py-[2.5rem]',
      44: 'py-[2.75rem]',
      48: 'py-[3rem]',
      52: 'py-[3.25rem]',
      56: 'py-[3.5rem]',
      60: 'py-[3.75rem]',
      64: 'py-[4rem]',
    },
    paddingVerticalLg: {
      0: 'py-[0rem]',
      4: 'py-[0.25rem]',
      8: 'py-[0.5rem]',
      12: 'py-[0.75rem]',
      16: 'py-[1rem]',
      20: 'py-[1.25rem]',
      24: 'py-[1.5rem]',
      28: 'py-[1.75rem]',
      32: 'py-[2rem]',
      36: 'py-[2.25rem]',
      40: 'py-[2.5rem]',
      44: 'py-[2.75rem]',
      48: 'py-[3rem]',
      52: 'py-[3.25rem]',
      56: 'py-[3.5rem]',
      60: 'py-[3.75rem]',
      64: 'py-[4rem]',
    },
  },
  defaultVariants: {
    borderRadius: 8,
    borderRadiusMd: 8,
    borderRadiusLg: 8,
    paddingHorizontal: 16,
    paddingHorizontalMd: 16,
    paddingHorizontalLg: 16,
    paddingVertical: 16,
    paddingVerticalMd: 16,
    paddingVerticalLg: 16,
  },
})

export function Card({
  borderRadius,
  paddingHorizontal,
  paddingVertical,
  className,
  children,
}: CardProps) {
  const style = cardStyles({
    borderRadius: renderResponsizeProp(borderRadius),
    borderRadiusMd: renderResponsizeProp(borderRadius, 'md'),
    borderRadiusLg: renderResponsizeProp(borderRadius, 'lg'),
    paddingHorizontal: renderResponsizeProp(paddingHorizontal),
    paddingHorizontalMd: renderResponsizeProp(paddingHorizontal, 'md'),
    paddingHorizontalLg: renderResponsizeProp(paddingHorizontal, 'lg'),
    paddingVertical: renderResponsizeProp(paddingVertical),
    paddingVerticalMd: renderResponsizeProp(paddingVertical, 'md'),
    paddingVerticalLg: renderResponsizeProp(paddingVertical, 'lg'),
    className,
  })

  return <div className={style}>{children}</div>
}
